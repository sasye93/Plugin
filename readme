requirements:
- package structure must fit to folder structure, e.g. package.sub.class1 must be inside package/sub/
- entry points must have same name as peer an be inside same package, but not nested in class, e.g. entry point of package.sub.parentClass$PeerClass must be package.sub.PeerClass
- build.sbt: add retrieveManaged := true; path must be standard lib_managed
- requires at least scala 2.10 (reflection API)


for windows contianres: experimental on


warning when multiple peer starts in 1 entry point (one service per container)
entry point check as attribute active
temp dir nich in classes, kommt durcheinander,

requirements: cygwin64 or anything for shell support

You need the following ports open to traffic to and from each Docker host participating on an overlay network:

TCP port 2377 for cluster management communications
TCP and UDP port 7946 for communication among nodes
UDP port 4789 for overlay network traffic

//////////
monitoring: docker stats; images; prometheus?; logs
https://code-maze.com/top-docker-monitoring-tools/

hmm, error is thrown (blackbox/blackbox not in compiler mirror) if not reflect included in target project

you could use a top level peer class, to create interface points where everyone connect!!!